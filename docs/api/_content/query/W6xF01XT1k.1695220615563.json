{"_path":"/conventions","_dir":"","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"Conventions","description":"In this section you will learn about the conventions in Gazel. Keep in mind\nthat Gazel heavily relies on Convention over Configuration design paradigm.","menu":{"position":2},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"conventions"},"children":[{"type":"text","value":"Conventions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this section you will learn about the conventions in Gazel. Keep in mind\nthat Gazel heavily relies on "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Convention over Configuration"}]},{"type":"text","value":" design paradigm."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/conventions#dependency-injection"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Dependency Injection"}]}]},{"type":"text","value":": Learn to use how to make\nuse of dependency injection in Gazel"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/conventions#business-services"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Business Services"}]}]},{"type":"text","value":": Find out how a public method\nturns into a business service"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/conventions#data-persistence"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Data Persistence"}]}]},{"type":"text","value":": Understand conventions for data\npersistence"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/conventions#relations"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Relations"}]}]},{"type":"text","value":": Explore different ways to create relations\nbetween persistent classes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/conventions#queries"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Queries"}]}]},{"type":"text","value":": Learn how to create query services"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/conventions#transaction-management"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Transaction Management"}]}]},{"type":"text","value":": Learn about how\nGazel manages transactions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/conventions#exception-handling"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Exception Handling"}]}]},{"type":"text","value":": See how to write exceptions\nin Gazel"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:conventions:index.md","_source":"content","_file":"conventions/index.md","_extension":"md"}