[{"_path":"/architecture/applications","_dir":"architecture","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Applications","description":"Here we list built-in applications of Gazel. Every application has IoC Layer\nand Application Layer by default.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here we list built-in applications of Gazel. Every application has "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"IoC Layer"}]},{"type":"text","value":"\nand "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Application Layer"}]},{"type":"text","value":" by default."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#ioc-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"IoC Layer"}]}]},{"type":"text","value":": This layer introduces dependency\ninjection to all applications and base to all other layers."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#application-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Application Layer"}]}]},{"type":"text","value":": This layer manages\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IApplicationBuilder"}]},{"type":"text","value":" instance and handles "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"OnStart"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"OnStop"}]},{"type":"text","value":"\nconfigurations."}]}]},{"type":"element","tag":"h2","props":{"id":"service-application"},"children":[{"type":"text","value":"Service Application"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Service application is designed to serve business functionality as internal\nservices. This application is currently the only one that provides a data\naccess layer. Below diagram illustrates a service application architecture;"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"diagram","src":"./applications-1.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It consists of three layers;"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#service-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Service Layer"}]}]},{"type":"text","value":": This layer gets domain\nobjects from IoC container and exposes your public methods as internal\nbusiness services."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#business-logic-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Business Logic Layer"}]}]},{"type":"text","value":": This layer\nscans your module assemblies and registers them to IoC container."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#data-access-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Data Access Layer"}]}]},{"type":"text","value":": This layer gest\npersistent classes from IoC container and maps them to a database. This way\nit enables your application to communicate with an RDBMS."}]}]},{"type":"element","tag":"h3","props":{"id":"features"},"children":[{"type":"text","value":"Features"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Audit"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authentication"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authorization"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Cache"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Concurrency Limiter"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Crypto"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Decimal Point"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Exception Handling"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"File System"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hashing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Localization"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Logging"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Message Queue"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Remote Call"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Secure Call"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transaction"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Utc"}]}]},{"type":"element","tag":"h2","props":{"id":"middleware-application"},"children":[{"type":"text","value":"Middleware Application"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Middleware Application consists of business modules without a data access layer\nand exposes configured methods as RESTful endpoints. Below you can see an\narchitectural diagram of this application."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"diagram","src":"./applications-2.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It consists of two layers;"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#rest-api-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Rest Api Layer"}]}]},{"type":"text","value":": This layer contains\nruntime-generated controller classes which converts and forwards incoming\nmessages to business services."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#service-local-client-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Service Local Client Layer"}]}]},{"type":"text","value":":\nThis layer serves as an adapter between "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Rest Api"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Business Logic"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#business-logic-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Business Logic Layer"}]}]},{"type":"text","value":": This layer\nscans your module assemblies and registers them to IoC container."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Just like a service application you can create business modules but this time\nwithout a Data Access Layer. This means that within this application, you are\nexpected to consume and orchestrate services from other systems."}]},{"type":"element","tag":"h3","props":{"id":"features-1"},"children":[{"type":"text","value":"Features"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Audit"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authentication"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authorization"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Concurrency Limiter"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Crypto"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Decimal Point"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Exception Handling"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"File System"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hashing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Localization"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Logging"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Secure Call"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Utc"}]}]},{"type":"element","tag":"h2","props":{"id":"api-application"},"children":[{"type":"text","value":"Api Application"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Api Application acts as an api gateway and exposes configured internal services\nto be available publicly via RESTful endpoints. Below you can see architectural\ndiagram of this application."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"diagram","src":"./applications-3.png"},"children":[]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#rest-api-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Rest Api Layer"}]}]},{"type":"text","value":": This layer contains\nruntime-generated service classes which converts and forwards incoming\nmessages to service client layer."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#service-client-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Service Client Layer"}]}]},{"type":"text","value":": This layer\naccepts incoming messages, converts them to internal HTTP calls and redirects\nthem to business services in a Service Application."}]}]},{"type":"element","tag":"h3","props":{"id":"features-2"},"children":[{"type":"text","value":"Features"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authentication"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Concurrency Limiter"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Exception Handling"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Http Header"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"File System"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hashing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Localization"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Logging"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Secure Call"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Utc"}]}]},{"type":"element","tag":"h2","props":{"id":"gateway-application"},"children":[{"type":"text","value":"Gateway Application"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Gateway Application is designed to serve desktop or single-page web\napplications that consumes directly internal business services. Unlike Api\nApplication, it does NOT transform HTTP messages between client and service\napplication. It only restricts client application to use a certain subset of\ninternal business services."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"diagram","src":"./applications-4.png"},"children":[]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#gateway-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Gateway Layer"}]}]},{"type":"text","value":": This layer contains a\nASP.NET Core middleware that forwards requests directly to the backing\nservice application url. It can also restrict a service from consumption."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#service-client-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Service Client Layer"}]}]},{"type":"text","value":": This layer\nconfigures url of backing service application and passes it to gateway layer."}]}]},{"type":"element","tag":"h3","props":{"id":"features-3"},"children":[{"type":"text","value":"Features"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Application Session"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authentication"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Concurrency Limiter"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hashing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Http Header"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Logging"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Utc"}]}]},{"type":"element","tag":"h2","props":{"id":"command-line-application"},"children":[{"type":"text","value":"Command Line Application"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Command Line Application is designed to easily develop CLIs. Unlike other\napplications it is not a web application. It only consists of a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Command Layer"}]},{"type":"text","value":";"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"diagram","src":"./applications-5.png"},"children":[]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"architecture#command-line-layer"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Command Line Layer"}]}]},{"type":"text","value":": This layer scans\napplication assembly to find implementations of "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ICommand"}]},{"type":"text","value":" interface and\nregister command routing so that a CLI command is forwarded to the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Execute"}]},{"type":"text","value":"\nmethod of your command classes."}]}]},{"type":"element","tag":"h3","props":{"id":"features-4"},"children":[{"type":"text","value":"Features"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Exception Handling"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"File System"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Localization"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Logging"}]}]}]},"position":1,"_type":"markdown","_id":"content:architecture:applications.md","_source":"content","_file":"architecture/applications.md","_extension":"md"},{"_path":"/architecture/layers","_dir":"architecture","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Layers","description":"Below is the list of available layers in Gazel. Every layer introduces zero or\nmore configuration interfaces. These configuration interfaces mostly act as\nwrappers around a new framework or library so that a feature can be built on\ntop of those technologies provided by layers.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Below is the list of available layers in Gazel. Every layer introduces zero or\nmore configuration interfaces. These configuration interfaces mostly act as\nwrappers around a new framework or library so that a feature can be built on\ntop of those technologies provided by layers."}]},{"type":"element","tag":"h2","props":{"id":"default-layers"},"children":[{"type":"text","value":"Default Layers"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"IoC Layer"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Application Layer"}]},{"type":"text","value":" are default in all applications, hence it\nit is better to put them before the rest."}]},{"type":"element","tag":"h3","props":{"id":"ioc-layer"},"children":[{"type":"text","value":"IoC Layer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Gazel uses "},{"type":"element","tag":"a","props":{"href":"http://www.castleproject.org/projects/windsor","rel":["nofollow"]},"children":[{"type":"text","value":"Castle.Windsor"}]},{"type":"text","value":" as its dependency injection framework. This layer\nintroduces two configurations:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IComponentModelBuilderConfiguration"}]},{"type":"text","value":": Provides "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IComponentModelBuilder"}]},{"type":"text","value":"\ninstance. Implement this configuration to add windsor interceptors or to make\na change in lifecycles of already registered components."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IIoCConfiguration"}]},{"type":"text","value":": Provides "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IKernel"}]},{"type":"text","value":" instance. Implement this to register\nnew components. "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IServiceCollection"}]},{"type":"text","value":" is available to be resolved so that you\ncan add other ASP.NET Core features."}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":":warning:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Every layer configuration has a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IKernel"}]},{"type":"text","value":" parameter for features to be able\nto "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Resolve"}]},{"type":"text","value":" components. "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IIoCConfiguration"}]},{"type":"text","value":" is the only type of\nconfiguration where it is safe to register new components."}]}]},{"type":"element","tag":"h3","props":{"id":"application-layer"},"children":[{"type":"text","value":"Application Layer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This layer serves as a base for every application and exposes three\nconfigurations:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IApplicationBuilderConfiguration"}]},{"type":"text","value":": Provides "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IApplicationBuilder"}]},{"type":"text","value":" instance.\nUse this configuration when you need to add new features via "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Use"}]},{"type":"text","value":" methods."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IOnStartConfiguration"}]},{"type":"text","value":": This configuration is called right after application\nbuilding is done. It is a hook on "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ApplicationStarted"}]},{"type":"text","value":" lifetime event."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IOnStopConfiguration"}]},{"type":"text","value":": This configuration is called during\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ApplicationStopping"}]},{"type":"text","value":" lifetime event."}]}]},{"type":"element","tag":"h2","props":{"id":"business-logic-layer"},"children":[{"type":"text","value":"Business Logic Layer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Business logic layer scans your module assemblies, registers your classes to\nIoC container and configures methods to be exposed as business services. Gazel\nuses "},{"type":"element","tag":"a","props":{"href":"https://github.com/multinetinventiv/routine","rel":["nofollow"]},"children":[{"type":"text","value":"Routine"}]},{"type":"text","value":" to define a coding style. It has two configuration interfaces;"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ICodingStyleConfiguration"}]},{"type":"text","value":": Provides "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ConventionBasedCodingStyle"}]},{"type":"text","value":" instance.\nUse this configuration to introduce new conventions for your the classes in\nmodule projects."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IInterceptionConfiguration"}]},{"type":"text","value":": Provides\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ConventionBasedInterceptionConfiguration"}]},{"type":"text","value":". Use this configuration to\nregister new interceptors to your business services."}]}]},{"type":"element","tag":"h2","props":{"id":"client-api-layer"},"children":[{"type":"text","value":"Client Api Layer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Client api layer enables your application to consume other service applications\nfrom yours. Gazel uses "},{"type":"element","tag":"a","props":{"href":"https://github.com/multinetinventiv/routine","rel":["nofollow"]},"children":[{"type":"text","value":"Routine"}]},{"type":"text","value":" to generate client api code, This layer\nintroduces one configuration;"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IClientApiConfiguration"}]},{"type":"text","value":": Provides "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ClientApiConfigurer"}]},{"type":"text","value":" instance. Use this\nto configure a client context of your service dependency."}]}]},{"type":"element","tag":"h2","props":{"id":"command-line-layer"},"children":[{"type":"text","value":"Command Line Layer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Command line layer scans your application assembly to look for implementations\nof "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ICommand"}]},{"type":"text","value":" interface. Gazel uses "},{"type":"element","tag":"a","props":{"href":"https://github.com/commandlineparser/commandline","rel":["nofollow"]},"children":[{"type":"text","value":"CommandLineParser"}]},{"type":"text","value":" to parse arguments\ninto command and options. This layer introduces one configuration;"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ICommandLineConfiguration"}]},{"type":"text","value":": Provides "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ParserSettings"}]},{"type":"text","value":" instance. Use this\nconfiguration to change the way "},{"type":"element","tag":"a","props":{"href":"https://github.com/commandlineparser/commandline","rel":["nofollow"]},"children":[{"type":"text","value":"CommandLineParser"}]},{"type":"text","value":" behaves."}]}]},{"type":"element","tag":"h2","props":{"id":"data-access-layer"},"children":[{"type":"text","value":"Data Access Layer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Gazel makes use of "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Generic Repository Pattern"}]},{"type":"text","value":" with two interfaces\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IRepository<T>"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ILookup<T>"}]},{"type":"text","value":". With their "},{"type":"element","tag":"a","props":{"href":"http://nhibernate.info","rel":["nofollow"]},"children":[{"type":"text","value":"NHibernate"}]},{"type":"text","value":" implementations\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NHibernateRepository<T>"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NHibernateLookup<T>"}]},{"type":"text","value":", Gazel enables your module\nclasses to perform CRUD operations. "},{"type":"element","tag":"a","props":{"href":"https://github.com/nhibernate/fluent-nhibernate","rel":["nofollow"]},"children":[{"type":"text","value":"Fluent NHibernate"}]},{"type":"text","value":" is used to configure\ndata access layer by conventions."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To create a new configuration in this layer, there are two configuration\ninterfaces:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IMappingConfiguration"}]},{"type":"text","value":": Helps you to have an access to\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"AutoPersistenceModel"}]},{"type":"text","value":" instance so that you can create new ORM conventions,\nor override existing conventions."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INHibernateConfiguration"}]},{"type":"text","value":": Helps you to have an access to\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"FluentConfiguration"}]},{"type":"text","value":" instance so that you can configure other things than\nclass mappings."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For more information see "},{"type":"element","tag":"a","props":{"href":"https://github.com/jagregory/fluent-nhibernate/wiki/Auto-mapping","rel":["nofollow"]},"children":[{"type":"text","value":"Fluent NHibernate Documentation"}]}]},{"type":"element","tag":"h2","props":{"id":"gateway-layer"},"children":[{"type":"text","value":"Gateway Layer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This layer is created specificaly to make "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Gateway Application"}]},{"type":"text","value":" possible. It\ndoes not introduce a new library or framework, instead it introduces a custom\nconfiguration to enable some changes in gateway behaviour;"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IGatewayConfiguration"}]},{"type":"text","value":": Provides "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ConventionBasedGatewayConfiguration"}]},{"type":"text","value":"\ninstance. Use this to change header mappings and/or to allow/forbid some\nrequests."}]}]},{"type":"element","tag":"h2","props":{"id":"rest-api-layer"},"children":[{"type":"text","value":"Rest Api Layer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Gazel uses "},{"type":"element","tag":"a","props":{"href":"https://docs.microsoft.com/en-us/aspnet/core/mvc/overvie","rel":["nofollow"]},"children":[{"type":"text","value":"ASP.NET Core MVC"}]},{"type":"text","value":" to render controllers out of your business\nservices. It generates source code, compiles and registers it during\ninitalization of your application. It provides one configuration;"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IRestApiConfiguration"}]},{"type":"text","value":": Provides "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"RestApiTemplate"}]},{"type":"text","value":" instance. Use this to\nchange action routes, naming conventions and type conversions in generated\ncode."}]}]},{"type":"element","tag":"h2","props":{"id":"service-client-layer"},"children":[{"type":"text","value":"Service Client Layer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Service client layer registers an "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IClientContext"}]},{"type":"text","value":" instance to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IKernel"}]},{"type":"text","value":" so\nthat you can use it to make calls to business services internally. This layer\nuses "},{"type":"element","tag":"a","props":{"href":"https://github.com/multinetinventiv/routine","rel":["nofollow"]},"children":[{"type":"text","value":"Routine"}]},{"type":"text","value":" to make client requests to a remote http endpoint. As an\nexample, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Api Application"}]},{"type":"text","value":" makes use of this layer to consume business services\nfrom a given base URL. It comes with one configuration;"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IServiceClientConfiguration"}]},{"type":"text","value":": Provides\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ConventionBasedServiceClientConfiguration"}]},{"type":"text","value":" and\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ConventionBasedInterceptionConfiguration"}]},{"type":"text","value":" instances. Use this to alter\nrequest/response headers and/or intercept business services from client."}]}]},{"type":"element","tag":"h2","props":{"id":"service-layer"},"children":[{"type":"text","value":"Service Layer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Service layer works directly with "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Business Logic Layer"}]},{"type":"text","value":" so that your domain\nobjects can be accessed through http endpoints. This layer uses "},{"type":"element","tag":"a","props":{"href":"https://github.com/multinetinventiv/routine","rel":["nofollow"]},"children":[{"type":"text","value":"Routine"}]},{"type":"text","value":" to\nexpose objects as services. It introduces two configuration interfaces:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IServiceConfiguration"}]},{"type":"text","value":": Helps you to configure request and response headers\nof your busines services."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IServiceClientConfiguration"}]},{"type":"text","value":": Provides\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ConventionBasedServiceClientConfiguration"}]},{"type":"text","value":" and\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ConventionBasedInterceptionConfiguration"}]},{"type":"text","value":" instances. Use this to alter\nrequest/response headers and/or intercept remote service calls from client."}]}]},{"type":"element","tag":"h2","props":{"id":"service-local-client-layer"},"children":[{"type":"text","value":"Service Local Client Layer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This layer registers an "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IClientContext"}]},{"type":"text","value":" instance that consumes "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Business Logic\nLayer"}]},{"type":"text","value":" locally, without an HTTP layer. This layer serves as an adapter between\nlayers that require "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IClientContext"}]},{"type":"text","value":" and layers that provide "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ICodingStyle"}]},{"type":"text","value":",\nsuch as "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Middleware Application"}]},{"type":"text","value":" and does not introduce an additional\nconfiguration interface."}]}]},"position":2,"_type":"markdown","_id":"content:architecture:layers.md","_source":"content","_file":"architecture/layers.md","_extension":"md"}]